trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: Versions
- group: Credentials

steps:

- task: Docker@2
  displayName: 'Registry Login'
  inputs:
    containerRegistry: 'DockerHub'
    command: 'login'

- task: Docker@2
  displayName: Build and Push
  inputs:
    command: buildAndPush
    containerRegistry: 'DockerHub'
    repository: mitin20/chatgpt_devops_example
    dockerFile: '$(System.DefaultWorkingDirectory)/AIAC/Dockerfile'
    tags: |
      $(Build.BuildId)

#- task: Docker@2
#  displayName: Build and push the Docker image
#  inputs:
#    command: buildAndPush
#    repository: 'mitin20/chatgpt_devops_example'
#    projectPath: '$(System.DefaultWorkingDirectory)'
#    dockerFile: '$(System.DefaultWorkingDirectory)/AIAC/Dockerfile'
#    tags: |
#      $(Build.BuildId)
#      latest
#    arguments: --build-arg reference=$(Build.SourceBranchName)
#    containerregistrytype: 'Container Registry'
#    dockerRegistryEndpoint: 'DockerHub'
#    loginServer: 'index.docker.io'
#    username: '$(DOCKERHUB_USER)'
#    password: '$(DOCKERHUB_TOKEN)'

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'config'

- task: Kubernetes@1
  displayName: 'kubectl  apply'
  inputs:
    kubernetesServiceEndpoint: 'aks-pr-dev'
    command: apply
    arguments: '-f chatgp_devops-example.yaml'
    secretType: generic
    versionSpec: 1.18.5
    workingDirectory: '$(System.DefaultWorkingDirectory)/AIAC/k8s'
    outputFormat: none

- task: Kubernetes@1
  displayName: 'kubectl set image'
  inputs:
    kubernetesServiceEndpoint: 'aks-pr-dev'
    command: set
    arguments: 'image deployment/chatgptdevopsexample chatgptdevopsexample=mitin20/chatgpt_devops_example:$(Build.BuildId)'
    secretType: generic
    versionSpec: 1.18.5
    workingDirectory: '$(System.DefaultWorkingDirectory)/AIAC/k8s'
    outputFormat: none

#- task: Kubectl@1
#  displayName: Deploy to k8s
#  inputs:
#    kubernetesServiceEndpoint: 'KubernetesConnection'
#    namespace: 'default'
#    commands: 'apply -f AIAC/k8s/chatgp_devops-example.yaml'
#    commandOptions: '--kubeconfig $(Agent.TempDirectory)/config'

#- task: Kubectl@1
#  displayName: Update image
#  inputs:
#    kubernetesServiceEndpoint: 'KubernetesConnection'
#    namespace: 'default'
#    commands: 'set image deployment/chatgptdevopsexample chatgptdevopsexample=mitin20/chatgpt_devops_example:$(Build.BuildId)'
#    commandOptions: '--kubeconfig $(Agent.TempDirectory)/config'
